name: Java CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle

      - name: Build and run tests
        run: ./gradlew build

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Deploy to remote server
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            echo "Starting deployment..."
            mkdir -p ~/deployments/url-shortener
            rm -rf ~/deployments/url-shortener/*
            rsync -av --exclude="deployments" /github/workspace/ ~/deployments/url-shortener/
            echo "Contents of deployment directory:"
            ls -la ~/deployments/url-shortener/
            cd ~/deployments/url-shortener
            echo "Checking for gradlew in deployment directory:"
            ls -la
            if [ -f ./gradlew ]; then
                chmod +x ./gradlew
                ./gradlew bootRun
            else
                exit 0
            fi
